*****************
Open Dylan 2024.2
*****************

This document describes the 2024.2 release of Open Dylan, released DD
MMM, 2024.  The highlights of the release are listed below.  For complete
details see the `commit logs
<https://github.com/dylan-lang/opendylan/compare/v2024.1.0...v2024.2.0>`_ for
this release.

.. note:: Some commit logs, for example for testworks and other libraries that
          are included in Open Dylan as git submodules, may be in other
          repositories.

* Download the release: https://opendylan.org/download
* Read documentation: https://opendylan.org
* Report problems: https://github.com/dylan-lang/opendylan/issues


Compiler
========

* Unified executables now export symbols so that call stack dumping
  works properly.

* The build rules for unified executables now properly depend on
  copying included run-time libraries such as libunwind.

* Optimizations that allow the type of ``if`` expressions to be more
  accurately estimated have been improved. For example, in this
  function:

  .. code-block::

    define function if-example (arg :: false-or(<integer>)) => (result :: <integer>);
      min(arg | 20, 30)
    end;

  the comparison can now be properly inlined because the first
  argument to :drm:`min` is known to be an :drm:`<integer>`.

* `Issue 1523 <https://github.com/dylan-lang/opendylan/issues/1523>`_, which
  could result in a compiler abort during code generation, has been fixed.

Tools
=====

* A new binary, ``dylan-lsp-server``, is bundled in this release. This is a
  Language Server Protocol (LSP) implementation for use with VS Code and
  emacs. It currently supports jump to definition/declaration, compiler
  warnings, and hover text.

  See the `lsp-server documentation
  <https://package.opendylan.org/lsp-dylan/>`_ for configuration details.

* The ``dylan`` tool has been renamed to `deft
  <https://package.opendylan.org/deft/>`_.  This was done primarily because it
  avoids some awkwardness when having to distinguish between the Dylan language
  and the ``dylan`` tool. The ``dylan`` binary continues to exist for backward
  compatibility (for example in GitHub workflows) but it will be removed in a
  future release.

Library Updates
===============

Dylan
-----

* The return value of :drm:`push-last` on :drm:`<deque>` now matches
  that specified in the Dylan Reference Manual.

IO
----

* The performance of several subclasses of :class:`<wrapper-stream>`
  has been improved by sealing the :func:`inner-stream` method for
  each subclass.

System
------

* The :const:`$machine-name` constant has been renamed to
  :const:`$machine-architecture`.  The old name will remain, for backward
  compatibility.

Other
-----

* The :lib:`dispatch-profiler` library is now usable and is
  documented.

* The obsolete (32-bit x86-only) ``stack-walker`` library was removed.

Contributors
============

